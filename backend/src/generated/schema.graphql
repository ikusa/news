### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


type Article {
  author: User!
  content: String!
  createdAt: DateTime!
  id: ID!
  title: String!
  updatedAt: DateTime!
}

input ArticleCreateInput {
  author: UserCreateOneWithoutAuthorInput!
  content: String!
  id: ID
  title: String!
}

input ArticleCreateManyWithoutArticlesInput {
  connect: [ArticleWhereUniqueInput!]
  create: [ArticleCreateWithoutAuthorInput!]
}

input ArticleCreateWithoutAuthorInput {
  content: String!
  id: ID
  title: String!
}

input ArticleWhereUniqueInput {
  id: ID
}

"""DateTime"""
scalar DateTime

type Mutation {
  createOneArticle(data: ArticleCreateInput!): Article!
  createOneUser(data: UserCreateInput!): User!
}

type Query {
  findManyArticle(after: String, before: String, first: Int, last: Int, skip: Int): [Article!]
  findManyUser(after: String, before: String, first: Int, last: Int, skip: Int): [User!]
  findOneArticle(where: ArticleWhereUniqueInput!): Article
  findOneUser(where: UserWhereUniqueInput!): User
}

type User {
  articles(after: String, before: String, first: Int, last: Int, skip: Int): [Article!]
  email: String!
  id: ID!
  name: String
}

input UserCreateInput {
  articles: ArticleCreateManyWithoutArticlesInput
  email: String!
  id: ID
  name: String
}

input UserCreateOneWithoutAuthorInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutArticlesInput
}

input UserCreateWithoutArticlesInput {
  email: String!
  id: ID
  name: String
}

input UserWhereUniqueInput {
  email: String
  id: ID
}
